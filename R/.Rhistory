,NodeID = "name"
,fontSize = 12
,nodeWidth = 30)
p
View(clean_data)
View(clean_data)
combined_data$hour<-round_date(combined_data$Time, "1 Hour")
View(combined_data)
combined_data$hour<-hour(combined_data$Time)
View(clean_data)
View(combined_data)
View(combined_data)
View(combined_data)
## ACCESS DATA FROM:
library(pdftools)
library(tidyverse)
library(readr)
library(glue)
library(stringr)
library(data.table)
library(networkD3)
library(ggplot2)
out_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/downloaded/'
text_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/text_conv/'
edit_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/hand_cleaned/'
# Read list of pdf_files to download
BPD_DATA <- read_csv("Bellaire_Crime_Data/BPD_DATA_v004.txt",col_names=FALSE)
BPD_DATA$file<-basename(BPD_DATA$X1)
col_list<-c('CFS','Date','Time','Location','Call Type','Enroute','Arrived','Closed','Disposition')
combined_data<-tibble()
i<-0
for (file in BPD_DATA$X1){
i<-i+1
print(glue('{text_lib}{basename(file)}'))
data_week<-read_delim( glue('{text_lib}{basename(file)}')
,delim="|"
,show_col_types=FALSE
,escape_double=FALSE
,col_names = col_list
,trim_ws = TRUE)
data_week$src_file<-basename(file)
data_week$lineid<-seq.int(nrow(data_week))
combined_data<-rbind(combined_data,data_week)
}
combined_data$hour<-hour(combined_data$Time)
data_tab<-setDT(combined_data)
clean_data<-combined_data[!is.na(CFS)]
all_types<-clean_data[,.(freq=.N),by=c('Call Type')]
##Call Type Frequency
type_fq<-head(clean_data[,.(Count=.N),by=c('Call Type')],n=10)
# 3: Using RColorBrewer
ggplot( type_fq
,aes( x=reorder(`Call Type`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
## ACCESS DATA FROM:
library(pdftools)
library(tidyverse)
library(readr)
library(glue)
library(stringr)
library(data.table)
library(networkD3)
library(ggplot2)
out_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/downloaded/'
text_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/text_conv/'
edit_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/hand_cleaned/'
# Read list of pdf_files to download
BPD_DATA <- read_csv("Bellaire_Crime_Data/BPD_DATA_v004.txt",col_names=FALSE)
BPD_DATA$file<-basename(BPD_DATA$X1)
col_list<-c('CFS','Date','Time','Location','Call Type','Enroute','Arrived','Closed','Disposition')
combined_data<-tibble()
i<-0
for (file in BPD_DATA$X1){
i<-i+1
print(glue('{text_lib}{basename(file)}'))
data_week<-read_delim( glue('{text_lib}{basename(file)}')
,delim="|"
,show_col_types=FALSE
,escape_double=FALSE
,col_names = col_list
,trim_ws = TRUE)
data_week$src_file<-basename(file)
data_week$lineid<-seq.int(nrow(data_week))
combined_data<-rbind(combined_data,data_week)
}
combined_data$hour<-hour(combined_data$Time)
data_tab<-setDT(combined_data)
clean_data<-data_tab[!is.na(CFS)]
all_types<-clean_data[,.(freq=.N),by=c('Call Type')]
##Call Type Frequency
type_fq<-head(clean_data[,.(Count=.N),by=c('Call Type')],n=10)
# 3: Using RColorBrewer
ggplot( type_fq
,aes( x=reorder(`Call Type`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
## SANKEY
all_links<-clean_data[,.(freq=.N),by=c('Call Type','Disposition')]
links<-all_links[`Call Type`=='Burg/Vehicle']
node_names<-factor(sort(unique( c(as.character(links$`Call Type`),as.character(links$Disposition)))))
nodes<-data.frame(name=node_names)
links<-data.frame( source = match(links$`Call Type`, node_names) - 1,
target = match(links$Disposition, node_names) - 1,
value = links$freq)
# Thus we can plot it
p <- sankeyNetwork( Links = links
,Nodes = nodes
,Source = "source"
,Target = "target"
,Value = "value"
,NodeID = "name"
,fontSize = 12
,nodeWidth = 30)
p
##Call Type by Hour Distribution
clean_data[,.(freq=.N),by=c('Call Type','Hour')]
##Call Type by Hour Distribution
type_hour<-clean_data[,.(freq=.N),by=c('Call Type','hour')]
View(type_hour)
##Call Type by Hour Distribution
type_hour<-clean_data[,.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
##Call Type by Hour Distribution
type_hour<-clean_data[,.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
##Call Type by Hour Distribution
type_hour<-clean_data[,.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -Count)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
##Call Type by Hour Distribution
type_hour<-clean_data[,.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -freq)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
View(all_types)
View(all_types)
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -freq)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, -hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
View(clean_data)
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-wday(combined_data$Date, label=TRUE, abbr=FALSE)
combined_data$weekday<-wday(combined_data$Date, label=TRUE, abbr=FALSE)
library(lubridate)
combined_data$weekday<-wday(combined_data$Date, label=TRUE, abbr=FALSE)
combined_data$weekday<-wday(combined_data$Date, label=TRUE, abbr=FALSE)
combined_data$weekday<-weekdays(combined_data$Date, label=TRUE, abbr=FALSE)
combined_data$weekday<-weekdays(combined_data$Date,abbr=FALSE)
View(combined_data)
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-weekdays(as.Date(combined_data$Date,'%d/%m/%Y'))
View(combined_data)
View(combined_data)
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-weekdays(as.Date(combined_data$Date,'%m/%d/%Y'))
View(combined_data)
View(combined_data)
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour','weekday')]
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-weekdays(as.Date(combined_data$Date,'%m/%d/%Y'))
data_tab<-setDT(combined_data)
clean_data<-data_tab[!is.na(CFS)]
all_types<-clean_data[,.(freq=.N),by=c('Call Type')]
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")+
facet_wrap(~ weekday)
##Call Type by Hour Distribution
type_hour<-clean_data[`Call Type`=='Traffic Stop',.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Call Type by Hour Distribution
type<-'Traffic Stop'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Call Type by Hour Distribution
type<-'Traffic Stop'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
View(all_types)
View(all_types)
##Call Type by Hour Distribution
type<-'Alarm/Burg'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Call Type by Hour Distribution
type<-'Alarm/Burg'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Top 10 Call Type by Frequency
type_fq<-head(clean_data[,.(Count=.N),by=c('Call Type')],n=10)
# 3: Using RColorBrewer
ggplot( type_fq
,aes( x=reorder(`Call Type`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
## ACCESS DATA FROM:
library(pdftools)
library(tidyverse)
library(readr)
library(glue)
library(stringr)
library(data.table)
library(networkD3)
library(ggplot2)
library(lubridate)
out_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/downloaded/'
text_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/text_conv/'
edit_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/hand_cleaned/'
# Read list of pdf_files to download
BPD_DATA <- read_csv("Bellaire_Crime_Data/BPD_DATA_v004.txt",col_names=FALSE)
BPD_DATA$file<-basename(BPD_DATA$X1)
col_list<-c('CFS','Date','Time','Location','Call Type','Enroute','Arrived','Closed','Disposition')
combined_data<-tibble()
i<-0
for (file in BPD_DATA$X1){
i<-i+1
print(glue('{text_lib}{basename(file)}'))
data_week<-read_delim( glue('{text_lib}{basename(file)}')
,delim="|"
,show_col_types=FALSE
,escape_double=FALSE
,col_names = col_list
,trim_ws = TRUE)
data_week$src_file<-basename(file)
data_week$lineid<-seq.int(nrow(data_week))
combined_data<-rbind(combined_data,data_week)
}
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-weekdays(as.Date(combined_data$Date,'%m/%d/%Y'))
data_tab<-setDT(combined_data)
clean_data<-data_tab[!is.na(CFS)]
all_types<-clean_data[,.(freq=.N),by=c('Call Type')]
##Call Type by Hour Distribution
type<-'Alarm/Burg'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Top 10 Call Type by Frequency
type_fq<-head(clean_data[,.(Count=.N),by=c('Call Type')],n=10)
# 3: Using RColorBrewer
ggplot( type_fq
,aes( x=reorder(`Call Type`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
View(all_types)
View(all_types)
## ACCESS DATA FROM:
library(pdftools)
library(tidyverse)
library(readr)
library(glue)
library(stringr)
library(data.table)
library(networkD3)
library(ggplot2)
library(lubridate)
out_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/downloaded/'
text_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/text_conv/'
edit_lib<-'C:/Users/chris/Documents/Bellaire_Crime_Data/hand_cleaned/'
# Read list of pdf_files to download
BPD_DATA <- read_csv("Bellaire_Crime_Data/BPD_DATA_v004.txt",col_names=FALSE)
BPD_DATA$file<-basename(BPD_DATA$X1)
col_list<-c('CFS','Date','Time','Location','Call Type','Enroute','Arrived','Closed','Disposition')
combined_data<-tibble()
i<-0
for (file in BPD_DATA$X1){
i<-i+1
print(glue('{text_lib}{basename(file)}'))
data_week<-read_delim( glue('{text_lib}{basename(file)}')
,delim="|"
,show_col_types=FALSE
,escape_double=FALSE
,col_names = col_list
,trim_ws = TRUE)
data_week$src_file<-basename(file)
data_week$lineid<-seq.int(nrow(data_week))
combined_data<-rbind(combined_data,data_week)
}
combined_data$hour<-hour(combined_data$Time)
combined_data$weekday<-weekdays(as.Date(combined_data$Date,'%m/%d/%Y'))
data_tab<-setDT(combined_data)
clean_data<-data_tab[!is.na(CFS)]
all_types<-clean_data[,.(freq=.N),by=c('Call Type')]
##Call Type by Hour Distribution
type<-'Alarm/Burg'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
##Top 10 Call Type by Frequency
type_fq<-head(clean_data[,.(Count=.N),by=c('Call Type')],n=10)
# 3: Using RColorBrewer
ggplot( type_fq
,aes( x=reorder(`Call Type`, -Count)
,y=Count
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle("Q3 2023\nFrequency of Call Type") +
theme(legend.position="none")
## SANKEY
all_links<-clean_data[,.(freq=.N),by=c('Call Type','Disposition')]
links<-all_links[`Call Type`=='Burg/Vehicle']
node_names<-factor(sort(unique( c(as.character(links$`Call Type`),as.character(links$Disposition)))))
nodes<-data.frame(name=node_names)
links<-data.frame( source = match(links$`Call Type`, node_names) - 1,
target = match(links$Disposition, node_names) - 1,
value = links$freq)
# Thus we can plot it
p <- sankeyNetwork( Links = links
,Nodes = nodes
,Source = "source"
,Target = "target"
,Value = "value"
,NodeID = "name"
,fontSize = 12
,nodeWidth = 30)
p
##Call Type by Hour Distribution
type<-'Traffic Stop'
type_hour<-clean_data[`Call Type`==type,.(freq=.N),by=c('Call Type','hour','weekday')]
ggplot( type_hour
,aes( x=reorder(`hour`, hour)
,y=freq
,fill=`Call Type`)) +
geom_bar(stat='identity') +
scale_fill_brewer(palette = "Paired") +
ggtitle(glue("Q3 2023\n{type}")) +
theme(legend.position="none")+
facet_wrap(~ factor(weekday,levels=c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')))
source("~/GitHub/HoustonCrimeDataAnalysis/R/NIBRS_HPD_ETL.R")
## Overall Violent
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]%>%
.[,NIBRSDescription:='Violent']
viol_data<-setDT(crimes_filtered)
## Apply NCVS Weights
### NCVS_violent_wts['2023']<-mean(unlist(NCVS_violent_wts))
viol_data[, NCVS_wt:=(as.numeric(NCVS_violent_wts[as.character(year)]))]%>%
.[,OC_wt:=NCVS_wt*OffenseCount]
colnames(viol_data)[colnames(viol_data)=="OffenseCount"] <-"Unweighted_OC"
colnames(viol_data)[colnames(viol_data)=="OC_wt"] <-"OffenseCount"
## Look at Raw Data
data<-viol_data[,.(OffenseCount=sum(Unweighted_OC)),by=(year_mon)]%>%
.[order(year_mon)]%>%
.[year_mon>'2019-12-01']
ggplot(data=data, aes(x=year_mon, y=OffenseCount, group=1))+
ggtitle(glue('Raw Data - UNWeighted '))+
geom_line(color="darkblue", linewidth=1, alpha=0.9, linetype=1)+
theme_economist()+
theme(legend.key = element_rect(fill = "grey", colour = "black"))+
theme(plot.title = element_text(hjust = 0.0))+
ylab("Month Counts - Violent")
data<-viol_data[,.(OffenseCount=sum(OffenseCount)),by=(year_mon)]%>%
.[order(year_mon)]%>%
.[year_mon>'2019-12-01']
ggplot(data=data, aes(x=year_mon, y=OffenseCount, group=1))+
ggtitle(glue('Raw Data - NCVS Weighted'))+
geom_line(color="darkblue", linewidth=1, alpha=0.9, linetype=1)+
theme_economist()+
theme(legend.key = element_rect(fill = "grey", colour = "black"))+
theme(plot.title = element_text(hjust = 0.0))+
ylab("Month Counts - Violent")
NIBRS_Trend( indata=viol_data
,'Violent Incidents')
NIBRS_YTD( indata=viol_data
,'Violent Incidents'
,latest_mon='07')
## Overall Property
crimes_filtered<-multi_year[NIBRSDescription %chin% property_crimes]%>%
.[,NIBRSDescription:='Property']
prop_data<-setDT(crimes_filtered)
## Apply NCVS Weights
### NCVS_property_wts['2023']<-mean(unlist(NCVS_property_wts))
prop_data[, NCVS_wt:=(as.numeric(NCVS_property_wts[as.character(year)]))]%>%
.[,OC_wt:=NCVS_wt*OffenseCount]
colnames(prop_data)[colnames(prop_data)=="OffenseCount"] <-"Unweighted_OC"
colnames(prop_data)[colnames(prop_data)=="OC_wt"] <-"OffenseCount"
NIBRS_Trend( indata=prop_data
,'Property Incidents')
NIBRS_YTD( indata=prop_data
,'Property Incidents'
,latest_mon='07')
