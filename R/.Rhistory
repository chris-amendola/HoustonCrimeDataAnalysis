"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
lmap<-data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)%>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=~popup
,color=~pal(NIBRSDescription)
,radius=5
#,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addLegend( "bottomright"
,pal=pal
,values=~NIBRSDescription,
title = "Incident Type",
opacity = 1
)
return lmap
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('darkred', 'blue', 'darkgreen', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
lmap<-data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)%>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=~popup
,color=~pal(NIBRSDescription)
,radius=5
#,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addLegend( "bottomright"
,pal=pal
,values=~NIBRSDescription,
title = "Incident Type",
opacity = 1
)
return lmap
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('darkred', 'blue', 'darkgreen', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
lmap<-data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)%>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=~popup
,color=~pal(NIBRSDescription)
,radius=5
#,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addLegend( "bottomright"
,pal=pal
,values=~NIBRSDescription,
title = "Incident Type",
opacity = 1
)
return(lmap)
}
geo_plot(datax)
library(htmlwidgets)
## Overall Violent
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]%>%
.[,NIBRSDescription:='Violent']
NIBRS_Trend(indata=crimes_filtered,'Violent')
NIBRS_Trend<- function( indata
,title1='title1') {
data<-indata[,.(OffenseCount=sum(OffenseCount)),by=(year_mon)]%>%
.[,Rolling_12_Month:=frollapply(OffenseCount,12,mean),]%>%
.[order(year_mon)]%>%
.[year_mon>'2019-12-01']
start_val<-data[year_mon==min(year_mon)][[1,3]]
max_value<-data[Rolling_12_Month==max(Rolling_12_Month)][[1,3]]
min_value<-data[Rolling_12_Month==min(Rolling_12_Month)][[1,3]]
end_value<-data[year_mon==max(year_mon)][[1,3]]
return(ggplot(data=data, aes(x=year_mon, y=Rolling_12_Month, group=1))+
ggtitle(glue('{title1}\n\rOverall'))+
geom_line(color="darkblue", linewidth=1, alpha=0.9, linetype=1)+
geom_hline(yintercept=start_val, linetype="dashed", color = "darkgreen")+
geom_hline(yintercept=end_value, linetype="dashed", color = "red")+
geom_hline(yintercept=max_value, linetype="dashed", color = "blue")+
theme_economist()+
theme(legend.key = element_rect(fill = "grey", colour = "black"))+
theme(plot.title = element_text(hjust = 0.5))+
ylab("Rolling 12 Month Average"))
}
#NIBRS_Trend(crimes_filtered,'Violent')
eom<-function( month
,year
,base_day='28'){
return(round_date(as.Date(ISOdate( year=year
,month=month
,day=base_day)),'month')-days(1))
}
m='06'
y='2019'
t<-eom(m,y)
eom(m,y)
eom('06','2019')
NIBRS_YTD<- function( indata
,title1='title1'
,bas_yr='2019'
,pri_yr='2022'
,cur_yr='2023'
,latest_mon='06') {
#2019
base_end_dt<-eom(latest_mon,bas_yr)
bas_agg<-indata[ (RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=as.Date(base_end_dt))
,.(OffenseCount=sum(OffenseCount))
,by=group_dims]
#2022
pri_end_dt<-eom(latest_mon,pri_yr)
pri_agg<-indata[ (RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=as.Date(pri_end_dt))
,.(OffenseCount=sum(OffenseCount))
,by=group_dims]
#2023
cur_end_dt<-eom(latest_mon,cur_yr)
cur_agg<-indata[ (RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=as.Date(cur_end_dt))
,.(OffenseCount=sum(OffenseCount))
,by=group_dims]
#Prep for Plotting
bas_agg[,'Year':=bas_yr]
pri_agg[,'Year':=pri_yr]
cur_agg[,'Year':=cur_yr]
plot_prep<- rbindlist(list(bas_agg,pri_agg,cur_agg))
return(ggplot( data=plot_prep
,aes( y=OffenseCount
,x=Year
,fill=Year))+
geom_bar( position="dodge"
,stat="identity")+
ggtitle(glue("Year-To-Date - {title1}"))+
theme_economist()+
scale_fill_manual(values=c('darkblue', 'darkgreen', 'darkred')))
}
#NIBRS_YTD(crimes_filtered)
#Prepare for comparison
#setnames(bas_agg, "OffenseCount", glue("OffenseCount_bas"))
#setnames(pri_agg, "OffenseCount", glue("OffenseCount_pri"))
#setnames(cur_agg, "OffenseCount", glue("OffenseCount_cur"))
#comp_ytds<-bas_agg[pri_agg,on=group_dims]%>%
#  .[cur_agg,on=group_dims]
#comp_ytds[,'diff_pri':=OffenseCount_cur-OffenseCount_pri]
#comp_ytds[,'diff_bas':=OffenseCount_cur-OffenseCount_bas]
#comp_ytds[,'perc_pri':=diff_pri/OffenseCount_cur]
#comp_ytds[,'perc_bas':=diff_bas/OffenseCount_pri]
#setnames( comp_ytds
#          ,c("OffenseCount_bas","OffenseCount_pri","OffenseCount_cur")
#          ,c( glue("OffenseCount_{bas_yr}")#
#              ,glue("OffenseCount_{pri_yr}")
#              ,glue("OffenseCount_{cur_yr}")))
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('darkred', 'blue', 'darkgreen', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
lmap<-data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)%>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=~popup
,color=~pal(NIBRSDescription)
,radius=5
#,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addLegend( "bottomright"
,pal=pal
,values=~NIBRSDescription,
title = "Incident Type",
opacity = 1
)
return(lmap)
}
geo_plot(datax)
library(htmlwidgets)
## Overall Violent
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]%>%
.[,NIBRSDescription:='Violent']
NIBRS_Trend(indata=crimes_filtered,'Violent')
NIBRS_YTD(indata=crimes_filtered,'Violent')
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]
## Individual Crimes
for (icrime in violent_crimes) {
print(icrime)
crimes_filtered<-multi_year[NIBRSDescription==icrime]
print(nrow(crimes_filtered) )
print(NIBRS_Trend(indata=crimes_filtered,icrime))
print(NIBRS_YTD(indata=crimes_filtered,icrime))
}
## Mapping by Month
ytd_months<-c('01','02','03','04','05','06')
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{month}-01'))
&(RMSOccurrenceDate>=glue('2023-{month}-01')),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth.html}'))
}
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{month}-01'))
&(RMSOccurrenceDate>=glue('2023-{month}-01')),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
## Mapping by Month
ytd_months<-c('01','02','03','04','05','06')
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{imonth}-01'))
&(RMSOccurrenceDate>=glue('2023-{imonth}-01')),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{imonth}-01'))
&(RMSOccurrenceDate>=eom(imonth,cur_year)),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
## Mapping by Month
cur_year<-'2023'
ytd_months<-c('01','02','03','04','05','06')
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{imonth}-01'))
&(RMSOccurrenceDate>=eom(imonth,cur_year)),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{imonth}-01'))
&(RMSOccurrenceDate>=eom(imonth,cur_year)),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,selfcontained=True
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
## Mapping by Month
cur_year<-'2023'
ytd_months<-c('01','02','03','04','05','06')
for (imonth in ytd_months) {
print(imonth)
data_pre<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>=glue('2023-{imonth}-01'))
&(RMSOccurrenceDate>=eom(imonth,cur_year)),]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
saveWidget( geo_plot(datax)
,selfcontained=TRUE
,file=glue('C:/Users/chris/Documents/Houston_Crime_Data_Analysis/July2023/Violent_Map_{imonth}.html'))
}
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('darkred', 'blue', 'darkgreen', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
lmap<-data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)%>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=~popup
,color=~pal(NIBRSDescription)
,radius=5
#,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addLegend( "bottomright"
,pal=pal
,values=~NIBRSDescription,
title = "Incident Type",
opacity = 1
)
return(lmap)
}
geo_plot(datax)
source("~/GitHub/HoustonCrimeDataAnalysis/R/NIBRS_HPD_ETL.R")
