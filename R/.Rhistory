,rlen=100
,alpha=c(0.05,0.01))
names(model)
testa<-as.data.frame(model$codes)
clus_coords<-bind(as.data.frame(model$unit.classif),coords)
# install the kohonen package
#install.packages("kohonen")
# load the kohonen package
library("kohonen")
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]%>%
.[ (RMSOccurrenceDate>='2023-06-01')
&(RMSOccurrenceDate<='2023-06-30')]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]
coords<-scale(crimes_filtered[,.(MapLongitude,MapLatitude)])
grid<-somgrid( xdim=4
,ydim=4
,topo="hexagonal")
model<-som( coords
,grid=grid
,rlen=100
,alpha=c(0.05,0.01))
names(model)
testa<-as.data.frame(model$codes)
clus_coords<-cbind(as.data.frame(model$unit.classif),coords)
combined<-cbind(crimes_filtered,clus_coords)
names(combined)<-make.names( names(combined)
,unique=TRUE)
combined%>%group_by(`model.unit.classif`)%>%summarize( xu=mean(MapLongitude)
,yu=mean(MapLatitude))
centers<-combined%>%group_by(`model.unit.classif`)%>%summarize( xu=mean(MapLongitude)
,yu=mean(MapLatitude))
geo_plot(data=centers)
centers<-combined%>%group_by(`model.unit.classif`)%>%summarize( MapLongitude=mean(MapLongitude)
,yuMapLatitude=mean(MapLatitude))
geo_plot(data=centers)
centers<-combined%>%group_by(`model.unit.classif`)%>%summarize( MapLongitude=mean(MapLongitude)
,MapLatitude=mean(MapLatitude))
geo_plot(data=centers)
centers%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,clusterOptions=markerClusterOptions()
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
#geo_plot(data=centers)
centers<-combined%>%group_by(`model.unit.classif`)%>%summarize( MapLongitude=mean(MapLongitude)
,MapLatitude=mean(MapLatitude))
centers%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,clusterOptions=markerClusterOptions()
,label=~`model.unit.classif`
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
#geo_plot(data=centers)
# install the kohonen package
#install.packages("kohonen")
# load the kohonen package
library("kohonen")
crimes_filtered<-multi_year[NIBRSDescription %chin% violent_crimes]%>%
.[ (RMSOccurrenceDate>='2023-06-01')
&(RMSOccurrenceDate<='2023-06-30')]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]
coords<-scale(crimes_filtered[,.(MapLongitude,MapLatitude)])
grid<-somgrid( xdim=5
,ydim=5
,topo="hexagonal")
model<-som( coords
,grid=grid
,rlen=100
,alpha=c(0.05,0.01))
names(model)
testa<-as.data.frame(model$codes)
clus_coords<-cbind(as.data.frame(model$unit.classif),coords)
combined<-cbind(crimes_filtered,clus_coords)
names(combined)<-make.names( names(combined)
,unique=TRUE)
centers<-combined%>%group_by(`model.unit.classif`)%>%summarize( MapLongitude=mean(MapLongitude)
,MapLatitude=mean(MapLatitude))
centers%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,clusterOptions=markerClusterOptions()
,label=~`model.unit.classif`
) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
#geo_plot(data=centers)
library("readxl")
library("glue")
library("tidyverse")
library("data.table")
library("zoo")
library("ggplot2")
library("ggthemes")
library("leaflet")
library('sf')
library('dplyr')
sf_use_s2(FALSE)
eom<-function( month
,year
,base_day='28'){
return(round_date(as.Date(ISOdate( year=year
,month=month
,day=base_day)),'month')-days(1))
}
#m='06'
#y='2019'
#t<-eom(m,y)
#eom(m,y)
#eom('06','2019')
#theme_update(plot.title = element_text(hjust = 0.5))
where_the_data_is<-'C:/Users/chris/Documents/Random_Nextdoor/My_Crime_Analysis - 05.04.23/Group/Data/HPD_NIBRS/'
support_dir<-'C:/Users/chris/Documents/GitHub/HoustonCrimeDataAnalysis/DATA/Support/'
districts<-st_read(glue("{support_dir}COH_ADMINISTRATIVE_BOUNDARY_-_MIL.geojson"))%>%
filter(!is.na(DISTRICT) )
beats<-st_read(glue("{support_dir}COH_POLICE_BEATS.geojson"))
bydim<-'Overall'
group_dims<-c('NIBRSDescription',bydim)
violent_crimes<-c('Aggravated Assault'
,'Forcible rape'
,'Robbery'
,'Murder, non-negligent')
baseline<-read_excel(glue('{where_the_data_is}2019_NIBRSPublicView.Jan1-Dec31.xlsx'))%>%
rename( OffenseCount=`Offense\r\nCount`
,RMSOccurrenceDate=`Occurrence\r\nDate`
,ZIPCode=`ZIP Code`
,StreetType=`Street\r\nType`
,RMSOccurrenceHour=`Occurrence\r\nHour`
,NIBRSClass=`NIBRS\r\nClass`
,StreetNo=`Block Range`)
baseline$MapLongitude<-NA
baseline$MapLatitude<-NA
min(baseline$RMSOccurrenceDate)
max(baseline$RMSOccurrenceDate)
year1<-read_excel(glue('{where_the_data_is}NIBRSPublicView.Jan1-Dec31-2020.xlsx'))%>%
rename( OffenseCount=`Offense\r\nCount`
,RMSOccurrenceDate=`Occurrence\r\nDate`
,ZIPCode=`ZIP Code`
,StreetType=`Street\r\nType`
,RMSOccurrenceHour=`Occurrence\r\nHour`
,NIBRSClass=`NIBRS\r\nClass`
,StreetNo=`Block Range`)
year1$MapLongitude<-NA
year1$MapLatitude<-NA
min(year1$RMSOccurrenceDate)
max(year1$RMSOccurrenceDate)
year2<-read_excel(glue('{where_the_data_is}NIBRSPublicViewDec21.xlsx'))
year2$MapLongitude<-NA
year2$MapLatitude<-NA
min(year2$RMSOccurrenceDate)
max(year2$RMSOccurrenceDate)
year3<-read_excel(glue('{where_the_data_is}NIBRSPublicViewDec22.xlsx'))
min(year3$RMSOccurrenceDate)
max(year3$RMSOccurrenceDate)
year4<-read_excel(glue('{where_the_data_is}NIBRSPublicViewJun23.xlsx'))
min(year4$RMSOccurrenceDate)
max(year4$RMSOccurrenceDate)
multi_year<-rbind(baseline,year1,year2,year3,year4)%>%
mutate(year_mon=floor_date(RMSOccurrenceDate,'month'))
multi_year$year<-year(multi_year$RMSOccurrenceDate)
multi_year$Overall<-'OverAll'
setDT(multi_year)
to_dt_month<-'06'
YTD_VOLUMES<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[ ( RMSOccurrenceDate>=glue('2019-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2019))
|( RMSOccurrenceDate>=glue('2020-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2020))
|( RMSOccurrenceDate>=glue('2021-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2021))
|( RMSOccurrenceDate>=glue('2022-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2022))
|( RMSOccurrenceDate>=glue('2023-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2023)),]
ETL_VALIDATE<-function(){
qa_year_mon<-multi_year%>%
group_by(year_mon)%>%
summarize(Row_Count=n())%>%
filter()
qa_year_mon$year_mon<-as.Date(qa_year_mon$year_mon)
str(qa_year_mon)
ggplot( data=qa_year_mon
,aes( x=year_mon
,y=Row_Count))+
geom_bar(stat="identity")+
scale_x_date( breaks = date_breaks("months")
,labels = date_format("%b-%Y")
,expand = c(.01, .01))+
theme(axis.text.x = element_text( angle = 90
,vjust = 0.5
,hjust=1))+
#  Labelling as desired
labs(
title = "Row-Counts By Year-Month"
#,subtitle = "SUB"
#,caption = "Caption"
)
qa_year<-multi_year%>%
group_by(year)%>%
summarize(Row_Count=n())
ggplot( data=qa_year
,aes( x=year
,y=Row_Count))+
geom_bar(stat="identity")
qa_year_by_year_mon<-multi_year%>%group_by(year_mon,year)%>%summarize(freq=n())
to_dt_month<-'06'
YTD_VOLUMES<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[ ( RMSOccurrenceDate>=glue('2019-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2019))
|( RMSOccurrenceDate>=glue('2020-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2020))
|( RMSOccurrenceDate>=glue('2021-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2021))
|( RMSOccurrenceDate>=glue('2022-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2022))
|( RMSOccurrenceDate>=glue('2023-01-01')
&RMSOccurrenceDate<=eom(to_dt_month,2023)),]
year_vol<-YTD_VOLUMES%>%group_by(year)%>%summarize(freq=n())
ggplot( data=year_vol
,aes( x=year
,y=freq))+
geom_bar(stat="identity")
}
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-eom(latest_mon,bas_yr)
pri_end_dt<-eom(latest_mon,pri_yr)
cur_end_dt<-eom(latest_mon,cur_yr)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
#Differnces
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
##Handle Nulls
comp_ytds[is.na(diff_prior),diff_prior:=0]
comp_ytds[is.na(diff_base),diff_base:=0]
#POPUP
comp_ytds$popup<-paste("<b>HPD Beat: </b>", comp_ytds$Beat, "<br>",
"<br>", "<b>Change from Last Year: </b>", comp_ytds$diff_prior,
"<br>", "<b>Change from 2019: </b>", comp_ytds$diff_base,
"<br>", "<b>Offense Count 2019: </b>", comp_ytds$'2019',
"<br>", "<b>Offense Count 2022: </b>", comp_ytds$'2022',
"<br>", "<b>Offense Count 2023: </b>", comp_ytds$'2023')
#Merge GeoJson to DataTable
##This filters to mappable beats from data.
beats_tab<-setDT(beats)
final<-comp_ytds[beats_tab,on=.(Beat=Beats)]
final<- sf::st_as_sf(final)
#Get Bounds for custom bins
min_bin<-min(comp_ytds$diff_prior,na.rm=TRUE)
max_bin<-max(comp_ytds$diff_prior,na.rm=TRUE)
c_bins=c( min_bin
,(min_bin%/%3)*2
,min_bin%/%3
,0
,max_bin%/%3
,(max_bin%/%3)*2
,max_bin)
# Creating a color palette, with custom bins, based on differnce from prior year
pal <- colorBin( "RdYlBu"
,domain=final$OffenseCount
,c_bins
,pretty = FALSE)
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 1.0,
smoothFactor = 0.2,
popup = ~popup) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-eom(latest_mon,bas_yr)
pri_end_dt<-eom(latest_mon,pri_yr)
cur_end_dt<-eom(latest_mon,cur_yr)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
#Differnces
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
##Handle Nulls
comp_ytds[is.na(diff_prior),diff_prior:=0]
comp_ytds[is.na(diff_base),diff_base:=0]
#POPUP
comp_ytds$popup<-paste("<b>HPD Beat: </b>", comp_ytds$Beat, "<br>",
"<br>", "<b>Change from Last Year: </b>", comp_ytds$diff_prior,
"<br>", "<b>Change from 2019: </b>", comp_ytds$diff_base,
"<br>", "<b>Offense Count 2019: </b>", comp_ytds$'2019',
"<br>", "<b>Offense Count 2022: </b>", comp_ytds$'2022',
"<br>", "<b>Offense Count 2023: </b>", comp_ytds$'2023')
#Merge GeoJson to DataTable
##This filters to mappable beats from data.
beats_tab<-setDT(beats)
final<-comp_ytds[beats_tab,on=.(Beat=Beats)]
final<- sf::st_as_sf(final)
#Get Bounds for custom bins
min_bin<-min(comp_ytds$diff_prior,na.rm=TRUE)
max_bin<-max(comp_ytds$diff_prior,na.rm=TRUE)
c_bins=c( min_bin
,(min_bin%/%3)*2
,min_bin%/%3
,0
,max_bin%/%3
,(max_bin%/%3)*2
,max_bin)
# Creating a color palette, with custom bins, based on differnce from prior year
pal <- colorBin( "RdYlBu"
,domain=final$OffenseCount
,c_bins
,pretty = FALSE
,reverse=TRUE)
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 1.0,
smoothFactor = 0.2,
popup = ~popup) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('orange', 'blue', 'green', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=data$popup
,clusterOptions=markerClusterOptions()
,color=~pal(NIBRSDescription)) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
}
geo_plot(datax)
data_pre<-multi_year[  (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]%>%
.[ (!is.na(MapLongitude))
|(!is.na(MapLatitude))]%>%
st_as_sf( coords=c("MapLongitude","MapLatitude")
,crs=4326
,remove=FALSE)
datax<-st_join( data_pre
,districts
,join = st_within)
geo_plot<-function(data=data){
pal <- colorFactor(
palette = c('orange', 'blue', 'green', 'purple'),
domain = data$NIBRSDescription
)
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>Council District: </b>",data$DISTRICT,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addCircleMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=data$popup
,clusterOptions=markerClusterOptions()
,color=~pal(NIBRSDescription)) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
}
geo_plot(datax)
