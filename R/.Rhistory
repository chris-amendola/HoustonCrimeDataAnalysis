,by=c(Beat,year))]
#Aggregate
incidents_ytd_agg_beat<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=c(Beat,year)]
#Aggregate
incidents_ytd_agg_beat<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
View(incidents_ytd_agg_beat)
View(incidents_ytd_agg_beat)
#Transpose Column per year
dcast( incidents_ytd_agg,
id ~ year,
value.var = c("OffenseCount"))
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
dcast( incidents_ytd_agg,
id ~ year,
value.var = c("OffenseCount"))
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
dcast( incidents_ytd_agg,
year,
value.var = c("OffenseCount"))
View(incidents_ytd_agg)
View(incidents_ytd_agg)
#Transpose Column per year
dcast( incidents_ytd_agg,
Beat~year,
value.var = c("OffenseCount"))
View(incidents_ytd_agg)
View(incidents_ytd_agg)
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
incidents_ytd_agg_year<-dcast( incidents_ytd_agg,
Beat~year,
value.var = c("OffenseCount"))
final<-geo_join( beats
,incidents_ytd_agg_year
,"Beats"
,"Beat")
View(final)
View(final)
View(incidents_ytd_agg_year)
View(incidents_ytd_agg_year)
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
View(comp_ytds)
View(comp_ytds)
View(comp_ytds)
View(comp_ytds)
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
View(comp_ytds)
View(comp_ytds)
library(leaflet)
districts<-rgdal::readOGR("C:/Users/chris/Downloads/COH_ADMINISTRATIVE_BOUNDARY_-_MIL.geojson")
data<-multi_year[ (NIBRSDescription %chin% violent_crimes)
&(RMSOccurrenceDate>='2023-06-01')
,]
data$Address<-paste( data$StreetNo
,' '
,data$StreetName
,' '
,data$StreetType
,' '
,data$Suffix)
data$popup<-paste("<b>Incident #: </b>", data$Incident, "<br>",
"<br>", "<b>Description: </b>", data$NIBRSDescription,
"<br>", "<b>Date: </b>", data$RMSOccurrenceDate,
"<br>", "<b>Time: </b>", data$RMSOccurrenceHour,
"<br>", "<b>HPD Beat: </b>", data$Beat,
"<br>", "<b>Address: </b>", data$Address,
"<br>", "<b>Longitude: </b>", data$MapLongitude,
"<br>", "<b>Latitude: </b>", data$MapLatitude)
data%>%leaflet()%>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers( lng = ~MapLongitude
,lat = ~MapLatitude
,popup=data$popup
,clusterOptions=markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons( data=districts
,fill=T
,color="grey"
,opacity=1
,weight=2)
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorNumeric("Blues", domain=final$OffenseCount)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorNumeric("Greens", domain=final$OffenseCount)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
pal <- colorBin("Greens", domain = -100:100)
pal(runif(10, 60, 100))
if (interactive()) {
# Exponential distribution, mapped continuously
previewColors(colorNumeric("Blues", domain = NULL), sort(rexp(16)))
# Exponential distribution, mapped by interval
previewColors(colorBin("Blues", domain = NULL, bins = 4), sort(rexp(16)))
# Exponential distribution, mapped by quantile
previewColors(colorQuantile("Blues", domain = NULL), sort(rexp(16)))
# Categorical data; by default, the values being colored span the gamut...
previewColors(colorFactor("RdYlBu", domain = NULL), LETTERS[1:5])
# ...unless the data is a factor, without droplevels...
previewColors(colorFactor("RdYlBu", domain = NULL), factor(LETTERS[1:5], levels = LETTERS))
# ...or the domain is stated explicitly.
previewColors(colorFactor("RdYlBu", levels = LETTERS), LETTERS[1:5])
}
pal <- colorBin("Greens", domain = -100:100)
pal(runif(10, 60, 100))
previewColors(colorNumeric("Blues", domain = NULL), sort(rexp(16)))
previewColors(colorBin("Blues", domain = NULL, bins = 4), sort(rexp(16)))
previewColors(colorBin("Blues", domain = NULL, bins = 4), sort(rexp(16)))
previewColors(colorQuantile("Blues", domain = NULL), sort(rexp(16)))
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorNumeric("Greens", domain=final$OffenseCount,6)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorQuantile("Greens", domain=final$OffenseCount,6)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorBin("Greens", domain=final$OffenseCount,6)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorBin("Greens", domain=final$OffenseCount,6, pretty = FALSE)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
library('tigris')
bas_yr='2019'
pri_yr='2022'
cur_yr='2023'
latest_mon='06'
base_end_dt<-round_date(as.Date(ISOdate( year=bas_yr
,month=latest_mon
,day='28')),'month')-days(1)
pri_end_dt<-round_date(as.Date(ISOdate( year=pri_yr
,month=latest_mon
,day='28')),'month')-days(1)
cur_end_dt<-round_date(as.Date(ISOdate( year=cur_yr
,month=latest_mon
,day='28')),'month')-days(1)
incidents_ytd<-multi_year[ (NIBRSDescription %chin% violent_crimes),]%>%
.[( RMSOccurrenceDate>=glue('{bas_yr}-01-01')
&RMSOccurrenceDate<=base_end_dt)
|( RMSOccurrenceDate>=glue('{pri_yr}-01-01')
&RMSOccurrenceDate<=pri_end_dt)
|( RMSOccurrenceDate>=glue('{cur_yr}-01-01')
&RMSOccurrenceDate<=cur_end_dt),]
#Aggregate
incidents_ytd_agg<-incidents_ytd[,.(OffenseCount=sum(OffenseCount))
,by=list(Beat,year)]
#Transpose Column per year
comp_ytds<-dcast( incidents_ytd_agg
,Beat~year
,value.var = c("OffenseCount"))
comp_ytds$diff_prior<-comp_ytds$'2023'-comp_ytds$'2022'
comp_ytds$diff_base<-comp_ytds$'2023'-comp_ytds$'2019'
final<-geo_join( beats
,comp_ytds
,"Beats"
,"Beat")
# Creating a color palette based on the number range in the total column
pal <- colorBin("RdYlBu", domain=final$OffenseCount,6, pretty = FALSE)
popup_sb <- paste0("Total: ", as.character(final$diff_prior))
leaflet() %>%
addTiles()%>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE))%>%
addPolygons(data = final ,
fillColor = ~pal(final$diff_prior),
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = final$diff_prior,
position = "bottomright",
title = "YTD Changes in Violent Crime Counts")
